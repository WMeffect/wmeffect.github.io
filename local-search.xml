<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>寫程式的新方法</title>
    <link href="/2023/03/07/dockerIntro/"/>
    <url>/2023/03/07/dockerIntro/</url>
    
    <content type="html"><![CDATA[<p>不管你多會寫程式，第一個步驟一定是建置環境，但不同的系統各自都有相對應的安裝方式，換個系統又必須要重新查方法安裝。但其實有個方法可以讓你省去這個麻煩，那就是Docker！</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>Docker是一個以應用程式為中心的虛擬環境。建置一個小小的linux系統(其實要哪個系統都可以，有支援就好，不然就自己做)在這個小電腦上跑你想要的任何東西。</p><h2 id="Docker跑程式"><a href="#Docker跑程式" class="headerlink" title="Docker跑程式"></a>Docker跑程式</h2><p>一開始我爸跟我說這個東西時我認為它離我太遠，因為第一個想到的用法是</p><ul><li>在公司裡大專案的開發需要一個穩定的環境，建置的過程過於繁雜，想換電腦開發又要花一大堆時間建置環境，所以用Docker的image紀錄好環境，以後想在其他電腦開發時才可以一整個環境直接複製貼上。</li></ul><p>但買了一個只有固態硬碟512GB的小電腦後，(跟桌機的2TB相比差太多了)開始想要怎麼才能控制好硬碟的空間，不想裝了一堆怪東西又不知道在哪裡。這時才想到原來Docker可以幫忙做到這件事。<br>查了網路才知道原來早就有人發現這個用法。而且microsoft有提供image。</p><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><p><a href="https://ithelp.ithome.com.tw/articles/10277952">這裡</a>有完整的教學。<br>我一開始點左下角那個按鈕也跟那個網站顯示的一樣<br><img src="/img/dockerIntro/%E7%B6%B2%E8%B7%AF%E4%B8%8A%E7%9A%84%E6%8C%89%E9%88%95.png" alt="網站的照片"><br>但用兩三天後就變這樣了<br><img src="/img/dockerIntro/%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8C%89%E9%88%95.jpg" alt="我自己的截圖"><br>可能他以為我不需要了但我還沒全部試過…</p><p>如果不懂Docker的話可以想成按下Add Development Container Configuration Files… 產生的檔案就是個設定檔，裡面提供了Docker需要知道的安裝項目，像是Image的檔案(好像都是microsoft做的)要取哪pull，可以看他寫的註解應該就會瞭解了，但我沒完全看懂，我只看懂postCreateCommand是用來打安裝好Container後要打的指令。<br><img src="/img/dockerIntro/devcontainer%E6%AA%94%E6%A1%88%E8%A7%A3%E9%87%8B.png" alt="介紹devcontainer.json"></p><h2 id="小問題"><a href="#小問題" class="headerlink" title="小問題"></a>小問題</h2><p>開啟Docker Desktop後windows和mac都會出現一個像是虛擬機的程式在後台執行，windows叫VMMEM，mac叫Virtual Machine Service。一開始windows的VMMEM會佔用大量的記憶體，mac也是，但windows久了VMMEM就會慢慢降下來只剩700MB(跟chrome用的差不多)，但mac的記憶體用量就不會下降了。如果有人懂這個東西是什麼的話可以在評論區告訴我。(但那個評論系統好像不會寄Email給我，所以我可能很晚才會看到)</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>VScode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>No. 5</title>
    <link href="/2023/03/06/leetcode5/"/>
    <url>/2023/03/06/leetcode5/</url>
    
    <content type="html"><![CDATA[<h1 id="No-5-最長回文子字串"><a href="#No-5-最長回文子字串" class="headerlink" title="No. 5 最長回文子字串"></a>No. 5 最長回文子字串</h1><p>Given a string s, return the longest palindromic substring in s.<br>題目<a href="https://leetcode.com/problems/longest-palindromic-substring/description/">在這裡</a></p><p>Chat GPT提供了Manacher’s Algorithm的演算法<br>這個演算法解決了偶數字串裏沒有中間數值的問題。</p><p><code>Problem:</code>有不一樣數值的問題可以用新增空位元來處理？</p><p>詳細的介紹看這個<a href="https://medium.com/hoskiss-stand/manacher-299cf75db97e">網站</a>，他也有參考國外的網站，想看原文的也可以去看，我就不貼了自己去點他的網站找<br>Chat GPT 寫的程式:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">string <span class="hljs-title">longestPalindrome</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        string t = <span class="hljs-built_in">preProcess</span>(s);<br>        <span class="hljs-type">int</span> n = t.<span class="hljs-built_in">length</span>(), center = <span class="hljs-number">0</span>, right = <span class="hljs-number">0</span>, start = <span class="hljs-number">0</span>, max_len = <span class="hljs-number">1</span>;<br>        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">p</span><span class="hljs-params">(n)</span></span>;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>            <span class="hljs-keyword">if</span> (i &lt; right) p[i] = <span class="hljs-built_in">min</span>(right - i, p[<span class="hljs-number">2</span> * center - i]);<br>            <span class="hljs-keyword">while</span> (t[i + p[i] + <span class="hljs-number">1</span>] == t[i - p[i] - <span class="hljs-number">1</span>]) p[i]++;<br>            <span class="hljs-keyword">if</span> (i + p[i] &gt; right) center = i, right = i + p[i];<br>            <span class="hljs-keyword">if</span> (p[i] &gt; max_len) max_len = p[i], start = (i - p[i]) / <span class="hljs-number">2</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> s.<span class="hljs-built_in">substr</span>(start, max_len);<br>    &#125;<br><br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-function">string <span class="hljs-title">preProcess</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        <span class="hljs-type">int</span> n = s.<span class="hljs-built_in">length</span>();<br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;^$&quot;</span>;<br>        string ret = <span class="hljs-string">&quot;^&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) ret += <span class="hljs-string">&quot;#&quot;</span> + s.<span class="hljs-built_in">substr</span>(i, <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">return</span> ret + <span class="hljs-string">&quot;#$&quot;</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/1970/01/01/hello-world/"/>
    <url>/1970/01/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
